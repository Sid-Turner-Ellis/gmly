// Interface automatically generated by schemas-to-ts

import { Media } from '../../../../common/schemas-to-ts/Media';
import { TeamProfile } from '../../../team-profile/content-types/team-profile/team-profile';
import { Notification } from '../../../notification/content-types/notification/notification';
import { Transaction } from '../../../transaction/content-types/transaction/transaction';
import { TeamProfile_Plain } from '../../../team-profile/content-types/team-profile/team-profile';
import { Notification_Plain } from '../../../notification/content-types/notification/notification';
import { Transaction_Plain } from '../../../transaction/content-types/transaction/transaction';
import { AdminPanelRelationPropertyModification } from '../../../../common/schemas-to-ts/AdminPanelRelationPropertyModification';

export enum Region {
  Europe = 'Europe',
  NorthAmerica = 'North America',
  Asia = 'Asia',
  Oceania = 'Oceania',}

export interface Profile {
  id: number;
  attributes: {
    createdAt: Date;    updatedAt: Date;    publishedAt?: Date;    wallet_address: string;
    region?: Region;
    username?: string;
    avatar?: { data: Media };
    wager_mode: boolean;
    trust_mode: boolean;
    bio?: string;
    team_profiles: { data: TeamProfile[] };
    notifications: { data: Notification[] };
    transactions: { data: Transaction[] };
    balance?: number;
  };
}
export interface Profile_Plain {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  wallet_address: string;
  region?: Region;
  username?: string;
  avatar?: Media;
  wager_mode: boolean;
  trust_mode: boolean;
  bio?: string;
  team_profiles: TeamProfile_Plain[];
  notifications: Notification_Plain[];
  transactions: Transaction_Plain[];
  balance?: number;
}

export interface Profile_NoRelations {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  wallet_address: string;
  region?: Region;
  username?: string;
  avatar?: number;
  wager_mode: boolean;
  trust_mode: boolean;
  bio?: string;
  team_profiles: number[];
  notifications: number[];
  transactions: number[];
  balance?: number;
}

export interface Profile_AdminPanelLifeCycle {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  wallet_address: string;
  region?: Region;
  username?: string;
  avatar?: AdminPanelRelationPropertyModification<Media>;
  wager_mode: boolean;
  trust_mode: boolean;
  bio?: string;
  team_profiles: AdminPanelRelationPropertyModification<TeamProfile_Plain>;
  notifications: AdminPanelRelationPropertyModification<Notification_Plain>;
  transactions: AdminPanelRelationPropertyModification<Transaction_Plain>;
  balance?: number;
}
